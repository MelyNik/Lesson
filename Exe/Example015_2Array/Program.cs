/*
Лекция 4. Рекурсия и двумерные(многомерные) массивы.

Двумерный массив:
string[,] table = new string[2,3];  

1. [,] указывает на то, что у нас будет две размерности.
Одна рамерность это строки, вторая столбцы.

2. table - название массива.

3. new string[2,3]; - новая строка с указанием сколько строк и столбцов, 2 - строки, 3 - столбцы.

Прямоугольная таблица чисел(матрица).
int[,] matrix = new int[5,8];

1. int - числовой массив.

2. [,] указывает на то, что у нас будет две размерности.

3. matrix - название массива.

4. new int[5,8]; - новый числовой массив, где 5 это строки, а 8 столблцы.

*/
/*
// Пример 1:
// Индексы строк и стоблцов так же начинаются с "0".
string[,] table = new string[2,5];
// String.Empty - Инициализация строки, создаём пустую строку.
// table[0, 0] - первый столбик. table[0,1] - второй. table[0,2] - третий и тд. //  И того у нас получилась таблица
// table[1, 0] - максимальный    table[1,1] - второй. table[1,2] - третий и тд. // из 2-х строк и 3-х столбцов.
//               индекс строки 
//               "1", так как 
//             всего 2 элемента.   
table[1, 2] = "слово";

for(int rows = 0; rows < 2; rows++) // rows - строка по английски.
{
    for(int columns = 0; columns < 5; columns++) // column - столбец по английски.
    {
        Console.WriteLine($"-{table[rows, columns]}-");
    }
}
*/
/*
// Второй прмер:

void FillArray(int[,] array) // создали функцию присваивания каждому элементу двумерного массива случайное число.
{
    for(int i=0; i<array.GetLength(0); i++)
    {
        for(int j=0; j<array.GetLength(1); j++)
        array[i, j] = new Random().Next(1,10);
    }
}

void PrintArray(int[,] array) // создали функцию вывода двумерного массива.
{
    for (int rows = 0; rows < array.GetLength(0); rows++) // matrix.GetLength(0) (matrix - название массива, 
                                                           // GetLength - вывести длинну, а (0) - конкретна длина
                                                           // первой цифры в скобках new int[3,4].
    {
        for (int columns = 0; columns < array.GetLength(1); columns++) // matrix.GetLength(0) (matrix - название массива, 
                                                                        // GetLength - вывести длинну, а (1) - конкретна длина
                                                                        // второй цифры в скобках new int[3,4].
        {
            Console.Write($"{array[rows, columns]} ");
        }
        Console.WriteLine();
    }
}

int[,] matrix = new int[3, 4];
PrintArray(matrix);
FillArray(matrix);
Console.WriteLine();
PrintArray(matrix);
*/

// Третий пример:
// Как представить чёрно-белое изображение.
// 0 - закрашенный пиксель.
// 1 - незакрашенный пиксель.
// int[,] pic = new int[23, 25];
// Как закрасить область ?

int[,] pic = new int[,]
{
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
{0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
{0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
};

void PrintImage(int[,] array) // создали функцию вывода двумерного массива.
{
    for (int i = 0; i < array.GetLength(0); i++) // matrix.GetLength(0) (matrix - название массива, 
                                                           // GetLength - вывести длинну, а (0) - конкретна длина
                                                           // первой цифры в скобках new int[3,4].
    {
        for (int j = 0; j < array.GetLength(1); j++) // matrix.GetLength(0) (matrix - название массива, 
                                                                        // GetLength - вывести длинну, а (1) - конкретна длина
                                                                        // второй цифры в скобках new int[3,4].
        {
            //Console.Write($"{array[i, j]} ");
            if(array[i, j] == 0)
            {
                Console.Write($" ");
            }
            else
            {
                Console.Write($"+");
            }
        }
        Console.WriteLine();
    }
}

void FillImage(int row, int col) // row - строка, col - пиксель.
{
    if(pic[row, col] == 0)
    {
        pic[row, col] = 1;
        FillImage(row-1, col);
        FillImage(row, col-1);
        FillImage(row+1, col);
        FillImage(row, col+1);
    }
}

//int[,] pic = new int[23, 25];
PrintImage(pic);
FillImage(13,13);
PrintImage(pic);
